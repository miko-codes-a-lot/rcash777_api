version: '3'

services:
  rcash-postgresdb:
    container_name: ${POSTGRES_HOST}
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /data/postgres
      POSTGRES_DB: ${POSTGRES_DATABASE}
    volumes:
      - rcash-postgres-data:/data/postgres
    ports:
      - '5432:5432'
    networks:
      - rcash-network

  rcash-minio:
    container_name: rcash-minio
    image: minio/minio:latest
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    ports:
      - '${MINIO_PORT:-9001}:9001'
      - '${MINIO_CONSOLE_PORT:-8901}:8901'
    command: minio server /data/minio --console-address ":${MINIO_CONSOLE_PORT}" --address ":${MINIO_PORT}"
    volumes:
      - rcash-minio-data:/data
    networks:
      - rcash-network

  rcash-minio-setup:
    container_name: rcash-minio-setup
    image: minio/mc:latest
    entrypoint: >
      sh -c "sleep 5 &&
      mc alias set minio ${MINIO_BASE_URL} ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} &&
      mc mb minio/rcash-files --ignore-existing"
    depends_on:
      - rcash-minio
    networks:
      - rcash-network

  rcash-api:
    container_name: rcash-api
    build:
      context: .
      dockerfile: ./docker/local/Dockerfile
    restart: always
    env_file: .env
    expose:
      - ${PORT}
    ports:
      - ${PORT}:${PORT}
    environment:
      - PORT=${PORT}
      - CLIENT_URL=${CLIENT_URL}
    links:
      - rcash-postgresdb
    depends_on:
      - rcash-postgresdb
    volumes:
      - ./.env:/app/.env
      - ./package.json:/app/package.json
      - ./yarn.lock:/app/yarn.lock
      - ./src:/app/src
      - ./db:/app/db
    networks:
      - rcash-network

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: rcash-pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - '5050:80'
    depends_on:
      - rcash-postgresdb
    networks:
      - rcash-network

networks:
  rcash-network:
    driver: bridge

volumes:
  rcash-postgres-data:
  rcash-minio-data:
